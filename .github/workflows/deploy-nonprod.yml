name: Deploy to ECS (Nonprod)

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    name: Build & Deploy to ECS Nonprod
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password | docker login --username AWS --password-stdin 026180161331.dkr.ecr.us-east-1.amazonaws.com

      - name: Build and push Docker image
        run: |
          docker build -t goep-dev-nonprod .
          docker tag goep-dev-nonprod:latest 026180161331.dkr.ecr.us-east-1.amazonaws.com/goep-dev-nonprod:nonprod-latest
          docker push 026180161331.dkr.ecr.us-east-1.amazonaws.com/goep-dev-nonprod:nonprod-latest

      - name: Inject execution role ARN
        run: |
          sed -i "s|REPLACE_EXECUTION_ROLE|${{ secrets.ECS_EXECUTION_ROLE_ARN }}|g" deploy/ecs-task-def.json

      - name: Render ECS task definition with new image
        id: render-task
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: deploy/ecs-task-def.json
          container-name: goep-dev-nonprod-container
          image: 026180161331.dkr.ecr.us-east-1.amazonaws.com/goep-dev-nonprod:nonprod-latest

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task.outputs.task-definition }}
          service: goep-dev-nonprod-service
          cluster: goep-dev-cluster
          wait-for-service-stability: true
